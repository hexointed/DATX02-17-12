Automatically generated by Mendeley Desktop 1.17.8
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Raa2015a,
abstract = {C$\lambda$aSH is a functional hardware description language in which structural
descriptions of combinational and synchronous sequential hardware can be
expressed. The language is based on Haskell, from which it inherits abstraction
mechanisms such as, the support of polymorphism and higher-order functions.
Recursion is another fundamental and commonly used abstraction mechanism in
Haskell. In contrast with Haskell, the support of recursion in C$\lambda$aSH is
currently limited. This is considered a shortcoming by many C$\lambda$aSH users.

Data-dependent recursive functions pose a problem for the current
implementation of C$\lambda$aSH. Currently, these recursive function definitions are
unrolled by the compiler, in an attempt to produce finite circuits. In the case
of data-dependent recursive functions, such finite circuit descriptions often
cannot be found using unrolling, as it would require infeasibly large circuits,
capable of handling all possible arguments.

This thesis focuses on extending the C$\lambda$aSH compiler with support of
data-dependent recursion. This is established by describing a formal rewrite
method, based on the continuation passing style transformation. This method
transforms recursive function descriptions to a corresponding circuitry,
capable of executing the recursive function. A detailed description of the
generated stack architecture is provided in the form of C$\lambda$aSH descriptions.
The resulting circuits, produced by applying the methodology, are elaborated
and synthesis results of those circuitries are discussed.},
author = {te Raa, I.},
file = {::},
title = {{Recursive functional hardware descriptions using C$\lambda$aSH}},
url = {http://essay.utwente.nl/68804/},
year = {2015}
}
@inproceedings{Reiner2011,
abstract = {Modeling appealing virtual scenes is an elaborate and time-consuming task, requiring not only training and experience, but also powerful modeling tools providing the desired functionality to the user. In this paper, we describe a modeling approach using signed distance functions as an underlying representation for objects, handling both conventional and complex surface manipulations. Scenes defined by signed distance functions can be stored compactly and rendered directly in real-time using sphere tracing. Hence, we are capable of providing an interactive application with immediate visual feedback for the artist, which is a crucial factor for the modeling process. Moreover, dealing with underlying mathematical operations is not necessary on the user level. We show that fundamental aspects of traditional modeling can be directly transferred to this novel kind of environment, resulting in an intuitive application behavior, and describe modeling operations which naturally benefit from implicit representations. We show modeling examples where signed distance functions are superior to explicit representations, but discuss the limitations of this approach as well. ?? 2011 Elsevier Ltd. All rights reserved.},
author = {Reiner, Tim and M{\"{u}}ckl, Gregor and Dachsbacher, Carsten},
booktitle = {Computers and Graphics (Pergamon)},
doi = {10.1016/j.cag.2011.03.010},
file = {::},
isbn = {00978493 (ISSN)},
issn = {00978493},
keywords = {Distance functions,Implicit surface rendering,Implicit surfaces,Interactive modeling},
number = {3},
pages = {596--603},
title = {{Interactive modeling of implicit surfaces using a direct visualization approach with signed distance functions}},
volume = {35},
year = {2011}
}
@article{Suzuki2010,
abstract = {SUMMARY Ray tracing is one of the most popular techniques for gen-erating photo-realistic images. Extensive research and development work has made interactive static scene rendering realistic. This paper deals with interactive dynamic scene rendering in which not only the eye point but also the objects in the scene change their 3D locations every frame. In order to realize interactive dynamic scene rendering, RTRPS (Ray Tracing based on Ray Plane and Bounding Sphere), which utilizes the coherency in rays, objects, and grouped-rays, is introduced. RTRPS uses bounding spheres as the spatial data structure which utilizes the coherency in objects. By using bounding spheres, RTRPS can ignore the rotation of moving objects within a sphere, and shorten the update time between frames. RTRPS utilizes the coherency in rays by merging rays into a ray-plane, assuming that the sec-ondary rays and shadow rays are shot through an aligned grid. Since a pair of ray-planes shares an original ray, the intersection for the ray can be com-pleted using the coherency in the ray-planes. Because of the three kinds of coherency, RTRPS can significantly reduce the number of intersection tests for ray tracing. Further acceleration techniques for ray-plane-sphere and ray-triangle intersection are also presented. A parallel projection tech-nique converts a 3D vector inner product operation into a 2D operation and reduces the number of floating point operations. Techniques based on frustum culling and binary-tree structured ray-planes optimize the order of intersection tests between ray-planes and a sphere, resulting in 50{\%} to 90{\%} reduction of intersection tests. Two ray-triangle intersection techniques are also introduced, which are effective when a large number of rays are packed into a ray-plane. Our performance evaluations indicate that RTRPS gives 13 to 392 times speed up in comparison with a ray tracing algorithm with-out organized rays and spheres. We found out that RTRPS also provides competitive performance even if only primary rays are used.},
author = {Suzuki, Ken-ichi and Kaeriyama, Yoshiyuki and Komatsu, Kazuhiko and Egawa, Ryusuke and Ohba, Nobuyuki and Kobayashi, Hiroaki},
doi = {10.1587/transinf.E93.D.891},
file = {::},
keywords = {bounding sphere,bounding volume,computer graphics,intersection test,ray tracing},
number = {4},
title = {{A Fast Ray-Tracing Using Bounding Spheres and Frustum Rays for Dynamic Scene Rendering}},
year = {2010}
}
@inproceedings{Marghany2007,
abstract = {This work is introducing a new approach for modeling shoreline change rate from AIRSAR Cvv- band. The hologram algorithm has been applied to simulate the wave spectra propagation pattern. In addition, Doppler frequency and azimuth cut off models are used to model longshore current movement and rate change of sediment transport volume. The results show that the phase information of AIRSAR hologram image can be used to simulate the wave refraction pattern. Furthermore, the Shoreline change rate is less than -0.5m /day which indicates an erosion event with accuracy error of plusmn 0.05 m/day.},
author = {Marghany, Maged and Hashim, Mazlan and Cracknell, Arthur P.},
booktitle = {Proceedings - The 2007 International Conference on Computational Science and its Applications, ICCSA 2007},
doi = {10.1109/ICCSA.2007.46},
file = {:Users/kuma/Library/Application Support/Mendeley Desktop/Downloaded/Marghany, Hashim, Cracknell - 2007 - Holographic interferomatery for modelling rate change of shoreline from AIRSAR data.pdf:pdf},
isbn = {0769529453},
keywords = {AIRSAR,Azimuth cut-off,Doppler frequency,Holographic},
pages = {346--349},
title = {{Holographic interferomatery for modelling rate change of shoreline from AIRSAR data}},
year = {2007}
}
@article{Yoo2009,
abstract = {A novel approach which uses the distance fields based on cell subdivision and an implicit surface interpolation based on the radial basis function is proposed in order to get an accurate and error-free offset model of arbitrary shapes composed of a large number of triangle meshes. In the method, the space bounding the original model is divided into smaller cells. For the efficient calculation of distance fields, valid cells which will generate a portion of offset model are selected previously by the proposed detection algorithm. These valid cells are divided again into much smaller voxels which assure required accuracy. At each voxel, the distance fields are created by calculating the minimum distances between the corner points of voxels and the triangle meshes. For the more efficient calculation of distance fields, valid vertices among the triangle meshes which will generate minimum distances with current cell are selected by checking the intersection between current cell and a cone prism generated at each vertex of triangle meshes. In addition, a new approach based on an implicit surface interpolation scheme is proposed to perform two types of offsetting operations including uniform and non-uniform offsetting in the same framework. In the method, a smooth implicit surface is generated from the discrete offset distance values given by the user. After generating the whole distance fields, the offset surface was constructed by using the conventional marching cube algorithm together with mesh smoothing scheme. The effectiveness and validity of this new offset method was demonstrated by performing numerical experiments for the various types of triangle meshes.},
author = {Yoo, Dong Jin},
doi = {10.1007/s12541-009-0081-5},
file = {::},
isbn = {1229-8557},
issn = {12298557},
journal = {International Journal of Precision Engineering and Manufacturing},
keywords = {3d offsetting,Cell subdivision,Cone prism intersection,Distance fields,Implicit function,Triangular net},
number = {4},
pages = {131--142},
title = {{General 3D offsetting of a triangular net using an implicit function and the distance fields}},
volume = {10},
year = {2009}
}
@phdthesis{JOHNSSON2012,
author = {JOHNSSON, M},
file = {::},
number = {April},
title = {{Approximating ray traced reflections using screen-space data}},
url = {http://publications.lib.chalmers.se/records/fulltext/193772/193772.pdf},
year = {2012}
}
@article{Zhou2008,
abstract = {We present a real-time algorithm called compensated ray marching for rendering of smoke under dynamic low-frequency environment lighting. Our approach is based on a decomposition of the input smoke animation, represented as a sequence of volumetric density ﬁelds, into a set of radial basis functions (RBFs) and a sequence of residual ﬁelds. To expedite rendering, the source radiance distribution within the smoke is computed from only the lowfrequency RBF approximation of the density ﬁelds, since the highfrequency residuals have little impact on global illumination under low-frequency environment lighting. Furthermore, in computing source radiances the contributions from single and multiple scattering are evaluated at only the RBF centers and then approximated at other points in the volume using an RBF-based interpolation. A slice-based integration of these source radiances along each view ray is then performed to render the ﬁnal image. The high-frequency residual ﬁelds, which are a critical component in the local appearance of smoke, are compensated back into the radiance integral during this ray march to generate images of high detail. The runtime algorithm, which includes both light transfer simulation and ray marching, can be easily implemented on the GPU, and thus allows for real-time manipulation of viewpoint and lighting, as well as interactive editing of smoke attributes such as extinction cross section, scattering albedo, and phase function. Only moderate preprocessing time and storage is needed. This approach provides the ﬁrst method for real-time smoke rendering that includes single and multiple scattering while generating results comparable in quality to ofﬂine algorithms like ray tracing.},
author = {Zhou, Kun and Ren, Zhong and Lin, Stephen and Bao, Hujun and Guo, Baining and Shum, Heung-Yeung},
doi = {10.1145/1360612.1360635},
file = {::},
isbn = {9781450301121},
issn = {07300301},
journal = {ACM Transactions on Graphics},
keywords = {environment lighting,figure 1,ment lighting,multiple scattering,participating media,perfect hashing,real-time rendering of smoke,sig-,single scat-,smoke volume can change,tering,the appearance of a,under dynamic environ-},
number = {3},
pages = {1},
title = {{Real-time smoke rendering using compensated ray marching}},
url = {http://doi.acm.org/10.1145/1360612.1360635. http://doi.acm.org/10.1145/1360612.1360635},
volume = {27},
year = {2008}
}
@article{Singh2010,
abstract = {Compact representation of geometry using a suitable procedural or mathematical model and a ray-tracing mode of rendering fit the programmable graphics processor units (GPUs) well. Several such representations including parametric and subdivision surfaces have been explored in recent research. The important and widely applicable category of the general implicit surface has received less attention. In this paper, we present a ray-tracing procedure to render general implicit surfaces efficiently on the GPU. Though only the fourth or lower order surfaces can be rendered using analytical roots, our adaptive marching points algorithm can ray trace arbitrary implicit surfaces without multiple roots, by sampling the ray at selected points till a root is found. Adapting the sampling step size based on a proximity measure and a horizon measure delivers high speed. The sign test can handle any surface without multiple roots. The Taylor test that uses ideas from interval analysis can ray trace many surfaces with complex roots. Overall, a simple algorithm that fits the SIMD architecture of the GPU results in high performance. We demonstrate the ray tracing of algebraic surfaces up to order 50 and nonalgebraic surfaces including a Blinn's blobby with 75 spheres at better than interactive frame rates.},
author = {Singh, Jag Mohan and Narayanan, P. J.},
doi = {10.1109/TVCG.2009.41},
file = {::},
isbn = {1077-2626},
issn = {10772626},
journal = {IEEE Transactions on Visualization and Computer Graphics},
keywords = {GPU rendering.,Implicit surfaces,Ray tracing},
number = {2},
pages = {261--272},
pmid = {20075486},
title = {{Real-time ray tracing of implicit surfaces on the GPU}},
volume = {16},
year = {2010}
}
@article{Sciences,
abstract = {In this paper, we obtain a generalized version of the well-known distance function family L p norm. We prove that the new functions satisfy distance function properties. By using these functions, convex symmetric shapes can be described as loci, the set of points which are in equal distance from a given point. We also show that these symmetric convex shapes can be easily parameterized. We also show these distance functions satisfy a Lipschitz type Condition. We provide a fast ray marching algorithm for rendering shapes described by these distance functions. These distance func-tions can be used as building blocks for some implicit mod-eling tools such as soft objects, constructive soft geometry, freps or ray-quadrics.},
author = {Sciences, Visualization},
file = {::},
title = {{Generalized Distance Functions}}
}
@article{Hart1996,
abstract = {Sphere tracing is a new technique for rendering implicit surfaces that uses geometric distance. Sphere tracing marches along the ray toward its Þrst intersection in steps guaranteed not to penetrate the implicit surface. It is particularly adept at rendering pathological surfaces. Creased and rough implicit surfaces are deÞned by functions with discontinuous or undeÞned derivatives. Sphere tracing requires only a bound on the magnitude of the derivative, robustly avoiding problems where the derivative jumps or vanishes. It is an e¦cient direct visualization system for the design and investigation of new implicit models. Sphere tracing e¦ciently approximates cone tracing, supporting symbolicpre Þltered antialiasing. Signed distance functions for a variety of primitives and operations are derived.},
author = {Hart, John C},
doi = {10.1007/s003710050084},
file = {::},
issn = {01782789},
journal = {The Visual Computer},
keywords = {distance,implicit surface,lipschitz condition,ray tracing,solid},
number = {10},
pages = {527--545},
pmid = {20635080},
title = {{Sphere tracing: a geometric method for the antialiased ray tracing of implicit surfaces}},
volume = {12},
year = {1996}
}
@article{Korndorfer2014,
abstract = {In this paper we present several performance and quality enhancements to classical sphere tracing: First, we propose a safe, over-relaxation-based method for accelerating sphere tracing. Second, a method for dynamically preventing self-intersections upon converting signed distance bounds enables controlling precision and rendering performance. In addition, we present a method for significantly accelerating the sphere tracing intersection test for convex objects that are enclosed in convex bounding volumes. We also propose a screen-space metric for the retrieval of a good intersection point candidate, in case sphere tracing does not converge thus increasing rendering quality without sacrificing performance. Finally, discontinuity artifacts common in sphere tracing are reduced using a fixed-point iteration algorithm. We demonstrate complex scenes rendered in real-time with our method. The methods presented in this paper have more universal applicability beyond rendering procedurally generated scenes in real-time and can also be combined with path-tracing-based global illumination solutions.},
author = {Kornd{\"{o}}rfer, Johann and Stamminger, Marc and Keinert, Benjamin},
doi = {10.2312/stag.20141233},
file = {:Users/kuma/Library/Application Support/Mendeley Desktop/Downloaded/Keinert et al. - 2014 - Enhanced Sphere Tracing.pdf:pdf},
journal = {STAG: Smart Tools {\&} Apps for Graphics},
keywords = {Computer Graphics Forum,EUROGRAPHICS},
pages = {8},
title = {{Enhanced Sphere Tracing}},
url = {http://erleuchtet.org/{~}cupe/permanent/enhanced{\_}sphere{\_}tracing.pdf},
year = {2014}
}
