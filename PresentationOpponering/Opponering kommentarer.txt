Jesper:
Det finns ingen bra anledning att utföra simuleringen i real-tid. 


Om man nu ändå är fast besluten att utföra simuleringen i real-tid så borde en
spelmotor med multi-core support ha använts.

Grafikkort är bättre på att raycasting än processorer och skulle ha kunnat
användas istället.

För tillfället uppoffras simuleringens "verklighetstrogenhet" för att kunna 
köras i realtid på grund av lösbara presandabesvär.

Kollisionsobjekten skulle kunna göras ännu simplare för att minska 
prestandabesvären.

På vissa bilder ser det ut som att simuleringen sker på en bana som är massivt 
mycket större (man ser berg osv i bakgrunden) än den relevanta delen av scenen
(hus, bilar, osv.) Simuleras raycasting för den runtomliggande terrängen?

Chi:

Som Jesper säger det borde funka bättre med multi core.

i 3.3 "Further, a tool allowing the user to manually instepc the collected
data in a visual manner culd enable the suer to inspec whether the colleced data 
is of sufficient quality for their purposes."
i 3.3.2 En väldig liknande mening uppstår igen "The necessity of allowing the 
the user to manually inspec the collected data and determine whether it was of 
further use of their purposes.".
Detta bordes fixas om lite för det känns lite upprepande.

sida 29. Man förstår ju att "pedestrian" är stilla i editor mode när det står "
the moving pedestrians are completelty frozen while in editor mode.." så behöver
ej nämna "and freze again if the suer switches back to editor mode"

4.2.2,  Post-Simulation Visualization
Det beskrivs att det är långsamt att skapa en mesh från point clouds (i programmet). 
Vad finns det för belägg för detta? är det inte så att voxelisera eller bygga 
meshes av punktdata är vanligen tillämpat just för att kunna realtidsrendera sådan 
data?   

4.2.3,  Real-time Visualization For Generated Data  
"The particle systems are updated once every revolution of the lidar sensor, 
this will create a rotation effect on the visualized point cloud." - är det 
inte tvärt om, uppdaterar man bara vid varje helt varv borde väl inga 
effekter av ett roterande svep ses i punktmolnet, för statisk terräng. 
eller syftas det på objekt som rör sig medan lidarn sveper? isf borde detta 
framgå. (kanske mest språklig poäng ändå..)

Angående partikelsystem, varför skulle icke-interagerande sådana bli 
icke-linjärt långsammare? är det en begränsning i unity? ni nämner att detta 
är visat genom tester men ingen sådan data presenteras.


4.4 Texten borde bli "combined" med 4.4.1 eller något.

sida 36 "Furthermore the fact that there were many different menus for different
types of objects alllot of serial executions during usage included toggling 
between the menus" är konstig.

